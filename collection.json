{
	"info": {
		"_postman_id": "b4c268cb-e537-4a19-bd7e-6fa15ddfbf80",
		"name": "To-do List Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User related requests",
			"item": [
				{
					"name": "Registering one new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dfed2f3b-0e90-4a45-b342-f39be79a8790",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"userEmail\", jsonData.user.email);\r",
									"pm.environment.set(\"userRegistrationToken\", jsonData.token);\r",
									"pm.environment.set(\"userId\", jsonData.user._id);\r",
									"\r",
									"// Test Cases \r",
									"pm.test(\"Status code is 201 Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response echo messsage contains correct age for registerd user\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"27\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFirstName}} {{$randomLastName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"passwrod1!\",\r\n    \"age\": 27\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/user/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c79425c-dde8-4778-88c0-d0f68dbf679e",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"userSessionToken\",jsonData.token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{userEmail}}\",\r\n    \"password\":\"passwrod1!\"\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user info who is currently logged in",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5e7c059-521d-4cda-898c-e58ec9638d1d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout a user currently in session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "281a8234-f2aa-4f69-997c-bda020dca56d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Returns logout status result\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZjQ3MDc3NmE3MzgwOTAwMTc3Y2QzZjkiLCJpYXQiOjE1OTg0OTA4MzB9.SHr0dLVzNOmQnawWn--C1Kerri-x3Tx0al34pTv-hGo",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}/user/logout",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update one user profile information",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d9986ba-d7c6-499d-a79f-6a74d348356e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Updated echo message contains new age\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"89\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegistrationToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\": 89\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "User changes profile picture",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc636b4b-d638-4ec5-83d2-cc3f92c1c452",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegistrationToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "avatar",
									"type": "file",
									"src": "/C:/Users/nijat/Documents/apipractice/avatar.jpg"
								}
							],
							"options": {
								"raw": {
									"language": "javascript"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/me/avatar",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get users profile picture",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76653983-120d-4eb7-b422-faf5e922c29a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/user/{{userId}}/avatar",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"{{userId}}",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete users profile picture",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76d3993b-220b-43ae-bbd6-e187d4613e3c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegistrationToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/user/me/avatar",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete one registered user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af3afe2e-26e9-416a-a9a1-3df186a78726",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegistrationToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a registered user information",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21a36c80-da1a-4e0b-b414-85244b665b6b",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Please authenticate.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegistrationToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Task related requests",
			"item": [
				{
					"name": "Registering one new user for task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83bdf31e-4cbe-4814-ad48-05c84905a704",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"userEmail\", jsonData.user.email);\r",
									"pm.environment.set(\"userRegistrationToken\", jsonData.token);\r",
									"pm.environment.set(\"userId\", jsonData.user._id);\r",
									"\r",
									"// Test \r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1 second\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFirstName}} {{$randomLastName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"passwrod1!\",\r\n    \"age\": 27\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/user/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as a user for task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8a733d4-f65a-45d0-9d14-f07aaf5ddd62",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"userSessionToken\",jsonData.token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{userEmail}}\",\r\n    \"password\":\"passwrod1!\"\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a single to-do task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31374536-7079-4283-b428-86b8bbc16a8b",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\":\"{{$randomLoremParagraph}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/task",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all the to-dos of a user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e430457a-4c63-4b8d-bbac-eeacccc2bd37",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "02674eb4-552e-4ebd-9224-4e49e0781378",
								"exec": [
									"//1. grab the json data from response body \r",
									"var jsonData = pm.response.json();\r",
									"//2. You target the data you want \r",
									"var idOfTask = jsonData.data[0]._id;\r",
									"//3. Set the extracted ID value to our Variable in environment \r",
									"pm.environment.set(\"taskID\", idOfTask);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the one task information by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b607730-9044-4cd3-95e0-5ff44bcbb7a6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task/{{taskID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task",
								"{{taskID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update one existing request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "181a34d9-a0e9-485c-8793-64741de9d531",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.completed).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"completed\": true\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/task/{{taskID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task",
								"{{taskID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a task with completed status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "195cf763-4fa6-4dfc-a824-38b8031b7931",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/task?completed=true",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							],
							"query": [
								{
									"key": "completed",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get tasks of user that is not completed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b24468d6-65c6-40eb-82cf-5e6580c17f79",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task?completed=false",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							],
							"query": [
								{
									"key": "completed",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get task by pagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b030f5ff-30e4-4702-a849-fb048ca0a942",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/task?limit=3&skip=5",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							],
							"query": [
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "skip",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a task by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37aafc77-1567-457d-918b-3d1259c58d4b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/task/{{taskID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task",
								"{{taskID}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}